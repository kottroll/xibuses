name = "gcc"
version = "4.7.2"
release = "1"
arch = "auto"
description = "GNU Compilers Collection"
license = "GPL"
url = "http://gcc.gnu.org/"
depends = ["readline>=6.1", "glibc"]
makedepends = ["binutils>=2.22", "libmpc"]
source = "ftp://gcc.gnu.org/pub/gcc/releases/{0}-{1}/{0}-{1}.tar.gz".format(name, version)
md5sum = "5199d34506d4fa6528778ddba362d3f4"
sha1sum = "39b5662c4bdffa8d8b8f31f61764de2a9e3b69b0"
sha256sum = "5638db234601f4d88aa2a70e0e38f71a2702b02be214b6d83297567f7868f7fb"
sha512sum = "4783a23de46902429a74b54322970d346e32f7d5890b401f01818e4ebcd2ae7f69f2098fd8ea66e4c4e7438e7f2c1837213918fa0e431e3feaee040b0dec8395"
API_VERSION = 1

def build():
    cd(name + "-" + version, 1)
    
    do_patches("-p0")
    
    if ARCH == "i686":
        apply_patch("9000", "")
    elif ARCH == "x86_64":
        apply_patch("9001", "")
        
    mkdir("gcc-build")
    cd("gcc-build", 1)
    
    configure_keys = """--prefix=/usr --libexecdir=/usr/lib --enable-shared --enable-threads=posix --enable-__cxa_atexit \
    --enable-clocale=gnu --enable-languages=c,c++ --disable-multilib --disable-bootstrap --with-system-zlib --disable-libstdcxx-pch \
    --enable-libstdcxx-time --enable-gnu-unique-object --enable-linker-build-id --with-ppl --enable-cloog-backend=isl \
    --disable-ppl-version-check --disable-cloog-version-check --enable-lto --enable-gold --enable-ld=default --enable-plugin \
    --with-plugin-ld=ld.gold --with-linker-hash-style=gnu --disable-multilib --disable-libssp --disable-build-with-cxx \
    --disable-build-poststage1-with-cxx --enable-checking=release --with-bugurl=https://xilitra.ru/bugs/"""
    
    configure_script_path = "%s/%s-%s/%s" % (SRCDIR, name, version, "configure")
    configure("custom %s %s" % (configure_script_path, configure_keys))
    
    make("-j4")
    
    #################################################################
    # Checks part
    # The only place where we can use sh() helper, for increasing
    # ulimit limits.
    #################################################################
    sh("ulimit -s 32768")
    
    # Some tests are known to fail. Adding '@ignore_errors' macro
    # to prevent tests aborting due to errors.
    make("-k check @ignore_errors")
                
def package():
    cd(name + "-" + version + "/gcc-build", 1)
    make_install("")
    cd(PKGDIR, 1)
    
    mkdir(PKGDIR + "/lib")
    ln("usr/bin/cpp", "lib/cpp")
    ln("usr/bin/gcc", "usr/bin/cc")
    
