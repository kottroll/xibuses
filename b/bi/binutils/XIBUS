# toolchain build order: linux-api-headers->glibc->binutils->gcc->binutils->glibc
name = "binutils"
version = "2.22"
release = "1"
description = "A set of programs to assemble and manipulate binary and object files"
license = "GPL"
url = "http://www.gnu.org/software/binutils/"
depends = ["glibc>=2.16", "zlib"]
source = "http://ftp.gnu.org/gnu/{0}/{1}-{2}.tar.gz".format(name, name, version)
md5sum = "8b3ad7090e3989810943aa19103fdb83"
options = ["-libtool"]
API_VERSION = 1

def build():
    cd("binutils-{0}".format(version), 1)
    do_patches("-p1")
    mkdir("binutils-build")
    cd("binutils-build", 1)
    # Disabling -Wnarrowing to get rid of some errors
    add_flags("CXXFLAGS", "-Wno-narrowing -Wno-free-nonheap-object -std=c++0x")
    amd64_flags = ""
    if ARCH == "x86_64":
        amd64_flags = "--enable-64-bit-bfd --enable-multilib"
    configure_script_path = "%s/%s-%s/%s" % (SRCDIR, name, version, "configure")
    configure_keys = """--prefix=/usr \
    --with-lib-path=/usr/lib:/usr/local/lib \
    --enable-ld=default --enable-gold \
    --enable-plugins --enable-threads \
    --enable-shared \
    %s""" % amd64_flags
    configure("custom %s %s" % (configure_script_path, configure_keys))    
    # check the host environment and makes sure all the necessary tools are available
    make("configure-host")
    make("tooldir=/usr")
    
    make("-k check")

def package():
    cd("binutils-{0}".format(version) + "/binutils-build", 1)
    make_install("prefix=/usr tooldir=/usr")

    unneeded_mans = ["dlltool", "nlmconv", "windres", "windmc"]
    for man in unneeded_mans:
         rm(PKGDIR + "/usr/share/man/man1/" + man + ".1")
