# toolchain build order: linux-api-headers->glibc->binutils->gcc->binutils->glibc
# copy-pasted from arch, okay
name = "binutils"
version = "2.22"
release = "1"
description = "A set of programs to assemble and manipulate binary and object files"
license = "GPL"
url = "http://www.gnu.org/software/binutils/"
depends = ["glibc>=2.16", "zlib"]
source = "http://ftp.gnu.org/gnu/{0}/{1}-{2}.tar.gz".format(name, name, version)
md5sum = "8b3ad7090e3989810943aa19103fdb83"

def build():
    mkdir("binutils-build")
    cd("binutils-build", 1)
    amd64_flags = ""
    if ARCH == "x86_64":
        amd64_flags = "--enable-64-bit-bfd --enable-multilib"
    configure_script_path = "%s/%s-%s/%s" % (SRCDIR, name, version, "configure")
    configure_keys = "--prefix=/usr \
    --with-lib-path=/usr/lib:/usr/local/lib \
    --enable-ld=default --enable-gold \
    --enable-plugins --enable-threads \
    --enable-shared \
    %s" % amd64_flags
    configure("custom %s %s" % (configure_script_path, configure_keys))
    # check the host environment and makes sure all the necessary tools are available
    make("configure-host")
    make("tooldir=%s" % PKGDIR + "/usr")
    # Rebuild libiberty.a with -fPIC
    cpdir("libiberty", "libiberty-pic")
    make("-C libiberty-pic clean")
    make("CFLAGS='%s -fPIC' -C libiberty-pic", CFLAGS)
    # Rebuild libbfd.a with -fPIC
    # hidden visability prevent 3rd party shared libraries exporting bfd non-stable API
    cpdir("bfd", "bfd-pic")
    make("-C bfd-pic clean")
    make("CFLAGS='%s -fPIC -fvisibility=hidden' -C bfd-pic" % CFLAGS)
    # Rebuild libopcodes.a with -fPIC
    cpdir("opcodes", "opcodes-pic")
    make("opcodes-pic clean")
    make("CFLAGS='%s -fPIC' -C opcodes-pic" % CFLAGS)

def package():
    cd("binutils-build", 1)
    make_install("prefix=%s/usr tooldir=%s/usr" % (PKGDIR, PKGDIR))
    # Add some useful headers
    install("644", SRCDIR + "binutils/include/libiberty.h", PKGDIR + "/usr/include")
    install("644", SRCDIR + "binutils/include/demangle.h", PKGDIR + "/usr/include")
    # install libraries rebuilt with -fPIC
    install("644", "libiberty-pic/libiberty.a", PKGDIR + "/usr/lib")
    install("644", "opcodes-pic/libopcodes.a", PKGDIR + "/usr/lib")
    install("644", "bfd-pic/libbfd.a", PKGDIR + "/usr/lib")
    # Remove Windows/Novell specific man pages
    rm(PKGDIR + "/usr/share/man/man1/{dlltool,nlmconv,windres,windmc}*")
    # Remove these symlinks, they are not ABI stable.
    # Programs should compile static to the .a file.
    write_to_file("INPUT ( /usr/lib/libbfd.a -liberty -lz )", PKGDIR + "/usr/lib/libbfd.so")
    write_to_file("INPUT ( /usr/lib/libopcodes.a -lbfd )", PKGDIR + "/usr/lib/libopcodes.so")
